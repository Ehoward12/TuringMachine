package ads2;

/**
 * This interface defines the basic behaviour required of a Turing Machine Tape
 * <p>
 * DO NOT EDIT THIS FILE
 */

public interface TuringTapeInterface
{
  /**
   * Returns the symbol that is currently under the head of the Turing Machine tape
   * @return      the symbol character that is currently under the head of the tape
   */
  public char GetCurrentSymbol();

  /**
   * Returns the blank symbol character as defined for this tape configuration
   * @return      the blank symbol character for this configuration
   */
  public char GetBlankSymbol();

  /**
   * Writes the specified symbol character to the tape at the current head location 
   * <p>
   * This method doesn't need to check for a valid symbol as it is assumed the caller 
   * will be well-behaved.
   * <p>
   * The head does not move as a consequence of this method; only the symbol under 
   * the head is effected
   * @param  symbol a character symbol to write to the tape at the location of the head
   */
  public void WriteCurrentSymbol(char symbol);

  /**
   * Moves the tape head left one cell, leaving the symbols on the tape unchanged.
   * The head should be able to move left an "infinite" number of times, limited 
   * only by the machine memory but not in a greedy way
   */
  public void MoveHeadLeft();

  /**
   * Moves the tape head right one cell, leaving the symbols on the tape unchanged.
   * The head should be able to move right an "infinite" number of times, limited 
   * only by the machine memory but not in a greedy way
   */
  public void MoveHeadRight();

  /**
   * Gets the symbol at a given offset from the current head location. 
   * <p>
   * This method should only ever be called by the drawing routine and is used
   * to display the tape symbols.  You should not call this method as part of your 
   * implementation of the core Turing Machine, but it will need to work for correct
   * visual rendering
   * <p>
   * This method should not alter the actual head location on the tape and is used purely
   * to determine what symbols are on the tape to display them.
   * @param  offset specifies the number of cells from the current head position that you are to return the symbol.  
   *                A negative value means to the left of the head position (e.g. "-2" means the symbol in the second cell to the left of the head)
   *                A positive value means to the right of the head position (e.g. "1" means the symbol in the cell to the right of the head)
   *                A value of zero means the symbol under the head
   */
  public char GetSymbol(int offset);
}
